// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "products",
    columns: [
      { name: "uniqId", type: "string" },
      { name: "productName", type: "string" },
      { name: "brandName", type: "string" },
      { name: "asin", type: "string" },
      { name: "category", type: "string" },
      { name: "upcEanCode", type: "string" },
      { name: "listPrice", type: "string" },
      { name: "sellingPrice", type: "string" },
      { name: "quantity", type: "string" },
      { name: "modelNumber", type: "float" },
      { name: "shippingWeight", type: "string" },
      { name: "productDimensions", type: "string" },
      { name: "image", type: "string" },
      { name: "sku", type: "string" },
      { name: "productUrl", type: "string" },
      { name: "stock", type: "string" },
      { name: "productDetails", type: "string" },
      { name: "dimensions", type: "string" },
      { name: "color", type: "string" },
      { name: "ingredients", type: "string" },
      { name: "directionToUse", type: "string" },
      { name: "isAmazonSeller", type: "string" },
      { name: "sizeQuantityVariant", type: "string" },
      { name: "productDescription", type: "string" },
    ],
  },
];
/** @type { import('../../client/src').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL: "https://My-Workspace-haalr5.us-east-1.xata.sh/db/my-cool-store",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
